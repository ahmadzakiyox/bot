"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getBodyText = exports.isInvoiceBody = exports.isVenueBody = exports.isLocationBody = exports.isMediaBody = exports.isTextBody = exports.MEDIA_TYPES = void 0;
const generic_types_1 = require("./generic-types");
exports.MEDIA_TYPES = ['animation', 'audio', 'document', 'photo', 'video'];
function isKnownMediaType(type) {
    if (typeof type !== 'string') {
        return false;
    }
    return exports.MEDIA_TYPES.includes(type);
}
function isTextBody(body) {
    if (!body) {
        return false;
    }
    if (typeof body === 'string') {
        return true;
    }
    if (!generic_types_1.isObject(body)) {
        return false;
    }
    if (body['type'] !== undefined) {
        return false;
    }
    if (body['location'] !== undefined) {
        return false;
    }
    if (body['venue'] !== undefined) {
        return false;
    }
    if (body['invoice'] !== undefined) {
        return false;
    }
    return generic_types_1.hasTruthyKey(body, 'text');
}
exports.isTextBody = isTextBody;
function isMediaBody(body) {
    if (!generic_types_1.isObject(body)) {
        return false;
    }
    if (!isKnownMediaType(body['type'])) {
        return false;
    }
    return generic_types_1.hasTruthyKey(body, 'media');
}
exports.isMediaBody = isMediaBody;
function isValidLocation(location) {
    return typeof location.latitude === 'number' && typeof location.longitude === 'number';
}
function isLocationBody(body) {
    if (!generic_types_1.hasTruthyKey(body, 'location')) {
        return false;
    }
    // Locations can't have text
    if (generic_types_1.hasTruthyKey(body, 'text')) {
        return false;
    }
    const { location } = body;
    return isValidLocation(location);
}
exports.isLocationBody = isLocationBody;
function isVenueBody(body) {
    if (!generic_types_1.hasTruthyKey(body, 'venue')) {
        return false;
    }
    // Locations can't have text
    if (generic_types_1.hasTruthyKey(body, 'text')) {
        return false;
    }
    const { venue } = body;
    if (!isValidLocation(venue.location)) {
        return false;
    }
    return typeof venue.title === 'string' && typeof venue.address === 'string';
}
exports.isVenueBody = isVenueBody;
function isInvoiceBody(body) {
    if (!generic_types_1.hasTruthyKey(body, 'invoice')) {
        return false;
    }
    // Invoices can't have text
    if (generic_types_1.hasTruthyKey(body, 'text')) {
        return false;
    }
    const { invoice } = body;
    return typeof invoice.title === 'string' && typeof invoice.description === 'string';
}
exports.isInvoiceBody = isInvoiceBody;
function getBodyText(body) {
    return typeof body === 'string' ? body : body.text;
}
exports.getBodyText = getBodyText;
//# sourceMappingURL=body.js.map