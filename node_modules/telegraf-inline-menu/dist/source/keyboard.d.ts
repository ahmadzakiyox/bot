import { InlineKeyboardButton as TelegramInlineKeyboardButton } from 'typegram';
import { ConstOrContextPathFunc, ContextPathFunc } from './generic-types';
export interface CallbackButtonTemplate {
    readonly text: string;
    readonly relativePath: string;
}
export declare type InlineKeyboardButton = Readonly<TelegramInlineKeyboardButton>;
export declare type InlineKeyboard = ReadonlyArray<readonly InlineKeyboardButton[]>;
export declare type ButtonTemplate = CallbackButtonTemplate | InlineKeyboardButton;
export declare type ButtonTemplateRow = readonly ButtonTemplate[];
declare type UncreatedTemplate<Context> = ConstOrContextPathFunc<Context, ButtonTemplate | undefined>;
declare type ButtonTemplateRowGenerator<Context> = ContextPathFunc<Context, ButtonTemplateRow[]>;
export declare class Keyboard<Context> {
    private readonly _entries;
    addCreator(creator: ButtonTemplateRowGenerator<Context>): void;
    add(joinLastRow: boolean, ...buttons: ReadonlyArray<UncreatedTemplate<Context>>): void;
    render(context: Context, path: string): Promise<InlineKeyboard>;
}
export {};
