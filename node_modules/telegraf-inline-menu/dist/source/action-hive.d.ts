import { ContextPathFunc, RegExpLike, ConstOrPromise } from './generic-types';
export declare type ActionFunc<Context> = (context: Context, path: string) => ConstOrPromise<string | boolean>;
export interface ButtonAction<Context> {
    readonly trigger: RegExpLike;
    readonly doFunction: ActionFunc<Context>;
}
export declare class ActionHive<Context> {
    private readonly _actions;
    add(trigger: RegExpLike, doFunction: ActionFunc<Context>, hide: undefined | ContextPathFunc<Context, boolean>): void;
    list(path: RegExpLike): ReadonlySet<ButtonAction<Context>>;
}
