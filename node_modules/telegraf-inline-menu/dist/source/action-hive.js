"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ActionHive = void 0;
const path_1 = require("./path");
class ActionHive {
    constructor() {
        Object.defineProperty(this, "_actions", {
            enumerable: true,
            configurable: true,
            writable: true,
            value: new Set()
        });
    }
    add(trigger, doFunction, hide) {
        path_1.ensureTriggerChild(trigger);
        const alreadyExisting = [...this._actions]
            .map(o => o.trigger.source)
            .includes(trigger.source);
        if (alreadyExisting) {
            throw new Error(`The action "${trigger.source.slice(0, -1)}" you wanna add was already added. When you hit the button only the first one will be used and not both. This one can not be accessed then. Change the action code to something different.`);
        }
        this._actions.add({
            trigger,
            doFunction: async (context, path) => {
                if (await (hide === null || hide === void 0 ? void 0 : hide(context, path))) {
                    return '.';
                }
                return doFunction(context, path);
            },
        });
    }
    list(path) {
        const result = new Set();
        for (const { trigger, doFunction } of this._actions) {
            result.add({
                trigger: path_1.combineTrigger(path, trigger),
                doFunction,
            });
        }
        return result;
    }
}
exports.ActionHive = ActionHive;
//# sourceMappingURL=action-hive.js.map